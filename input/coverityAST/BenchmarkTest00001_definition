/*
 * Matching class: java.security.Provider[]
 * declared at:
 *   <unknown>
 * defined in TU 270 with row 23
 */
public final array java.security.Provider[] implements java.io.Serializable, java.lang.Cloneable {
  public final java.security.Provider[] clone();
  public final Provider[](int);
}
/*
 * Matching class: javax.servlet.http.Cookie[]
 * declared at:
 *   <unknown>
 * defined in TU 270 with row 5
 */
public final array javax.servlet.http.Cookie[] implements java.io.Serializable, java.lang.Cloneable {
  public final javax.servlet.http.Cookie[] clone();
  public final Cookie[](int);
}
/*
 * Matching class: org.owasp.benchmark.testcode.BenchmarkTest00001
 * declared at:
 *   D:/git/benchmark/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java:30:14-D:/git/benchmark/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java:30:31
 * defined in TU 270 with row 283
 */
@javax.servlet.annotation.WebServlet(asyncSupported = false), description = ""), displayName = ""), initParams = {}), largeIcon = ""), loadOnStartup = -1), name = ""), smallIcon = ""), urlPatterns = {}), value = {"/BenchmarkTest00001"})
public class org.owasp.benchmark.testcode.BenchmarkTest00001 extends javax.servlet.http.HttpServlet {
  public void doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException;
  public void doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException;
  public BenchmarkTest00001();
  private static <clinit>();
  private static final long serialVersionUID;
}
/*
 * Matching function: org.owasp.benchmark.testcode.BenchmarkTest00001.<clinit>()void
 * declared at:
 *   D:/git/benchmark/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java:30:14-D:/git/benchmark/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java:30:31
 * defined in TU 270 with row 1127
 */

org.owasp.benchmark.testcode.BenchmarkTest00001.<clinit>() {
  org.owasp.benchmark.testcode.BenchmarkTest00001.serialVersionUID = 1L;
}

/*
 * Matching function: org.owasp.benchmark.testcode.BenchmarkTest00001.<init>()void
 * declared at:
 *   D:/git/benchmark/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java:30:14-D:/git/benchmark/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java:30:31
 * defined in TU 270 with row 1126
 */

org.owasp.benchmark.testcode.BenchmarkTest00001.BenchmarkTest00001() {}

/*
 * Matching global: org.owasp.benchmark.testcode.BenchmarkTest00001.serialVersionUID
 * declared at:
 *   D:/git/benchmark/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java:32:28-D:/git/benchmark/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java:32:43
 * defined in TU 270 with row 269
 */
final long org.owasp.benchmark.testcode.BenchmarkTest00001.serialVersionUID;
/*
 * Matching function: org.owasp.benchmark.testcode.BenchmarkTest00001.doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)void
 * declared at:
 *   D:/git/benchmark/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java:35:14-D:/git/benchmark/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java:35:113
 * defined in TU 270 with row 1124
 */

void org.owasp.benchmark.testcode.BenchmarkTest00001.doGet(javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response) throws java.io.IOException, javax.servlet.ServletException {
  doPost(request, response);
}

/*
 * Matching function: org.owasp.benchmark.testcode.BenchmarkTest00001.doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)void
 * declared at:
 *   D:/git/benchmark/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java:40:14-D:/git/benchmark/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java:40:114
 * defined in TU 270 with row 1125
 */

void org.owasp.benchmark.testcode.BenchmarkTest00001.doPost(javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response) throws java.io.IOException, javax.servlet.ServletException {
  javax.servlet.http.Cookie[] cookies = request.getCookies();
  java.lang.String param = null;
  boolean foundit = false;
  if (cookies != null) {
    for (javax.servlet.http.Cookie cookie : cookies) {
      if (cookie.getName().equals("foo")) {
        param = cookie.getValue();
        foundit = true;
      }
    }
    if (!foundit) {
      param = "";
    }
  } else {
    param = "";
  }
  java.security.Provider[] provider = java.security.Security.getProviders();
  javax.crypto.Cipher c;
  try {
    if (provider.length > 1) {
      c = javax.crypto.Cipher.getInstance("DES/CBC/PKCS5PADDING", java.security.Security.getProvider("SunJCE"));
    } else {
      c = javax.crypto.Cipher.getInstance("DES/CBC/PKCS5PADDING", java.security.Security.getProvider("SunJCE"));
    }
  } catch (java.security.NoSuchAlgorithmException e) {
    java.lang.System.out.println("Problem executing crypto - javax.crypto.Cipher.getInstance(java.lang.String,java.security.Provider) Test Case");
    throw new javax.servlet.ServletException(e);
  } catch (javax.crypto.NoSuchPaddingException e) {
    java.lang.System.out.println("Problem executing crypto - javax.crypto.Cipher.getInstance(java.lang.String,java.security.Provider) Test Case");
    throw new javax.servlet.ServletException(e);
  }
  response.getWriter().println("Crypto Test javax.crypto.Cipher.getInstance(java.lang.String,java.security.Provider) executed");
}

